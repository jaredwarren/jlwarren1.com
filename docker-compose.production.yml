version: '3.5'
services:
    loadbalancer:
        image: traefik
        command: --web --docker --docker.swarmmode
        ports:
            - 80:80
            - 443:443
            - 8080:8080 # Tr√¶fik dashboard
        volumes:
            # Required so Traefik can see new or changed deployments.
            - /var/run/docker.sock:/var/run/docker.sock
            # Mounted so we can Hot-reload config
            - ./traefik.toml:/etc/traefik/traefik.toml
        deploy:
            restart_policy:
                condition: any
            mode: replicated
            replicas: 1
            update_config:
                delay: 2s
            placement:
                constraints: 
                    - node.role == manager
                    - node.labels.name != db
            labels:
                - traefik.frontend.rule=Host:traefik.bladehq.com
                - "traefik.enable=true"
                - "traefik.port=8080"
        networks:
            - traefik-net
        secrets:
            - bladehq.com.crt
            - bladehq.com.key
            # TODO: add other stores
    nginx:
        image: 159.89.146.142/blaze_nginx
        build: 
            context: ./.docker/nginx/
            dockerfile: ./Dockerfile-production
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
            labels:
                - "traefik.backend=nginx"
                - "traefik.docker.network=traefik-net"
                - "traefik.enable=true"
                - "traefik.frontend.rule=Host:docker.bladehq.com"
                # TODO: add other stores
                - "traefik.port=80"
            placement:
                constraints: 
                    - node.labels.name != db
        depends_on: 
            - loadbalancer
            - bladehq
            # TODO: add other stores
        volumes:
            # Public Files
            - /home/bladehq:/home/bladehq:ro
            - /usr/lib/php/blaze/system:/home/bladehq/public_html/system:ro
            - /usr/lib/php/blaze/templates:/home/bladehq/public_html/templates:ro
            - /usr/lib/php/blaze/laravel/public:/home/bladehq/public_html/laravel/public:ro
            # TODO: add other stores
        networks:
            - traefik-net
            - bladehq
    bladehq:
        image: 159.89.146.142/blaze_bladehq:0.0.1
        build: 
            context: ./
            dockerfile: ./.docker/php/Dockerfile-production
            args:
                STORE_NAME: "bladehq"
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
            labels:
                - "traefik.enable=true"
            placement:
                constraints: 
                    - node.labels.name != db
        environment:
            PHP_USER: www-data
            PHP_GROUP: www-data
            PHP_MODE: 0660
        volumes:
            - /home/bladehq:/home/bladehq:rw
            - /usr/lib/php/blaze/system:/usr/lib/php/blaze/system
            - /usr/lib/php/blaze/templates:/usr/lib/php/blaze/templates
            - /usr/lib/php/blaze/system:/home/bladehq/public_html/system
            - /usr/lib/php/blaze/templates:/home/bladehq/public_html/templates
            - /usr/lib/php/blaze/laravel/public:/home/bladehq/public_html/laravel/public
        networks: 
            - bladehq
            - mysql
        secrets: 
            - blazeadminconfig
            - bladehq_env
        depends_on: 
            - mysql
    # TODO: add other stores
    mysql:
        image: 159.89.146.142/blaze_mysql
        build: 
            # using this context, building is a bit faster, not sure why.
            context: ./.docker/databases/
            dockerfile: ./Dockerfile-production
        deploy:
            placement:
                # TODO: in production this should be something like [node.labels.name == db]
                constraints: 
                    - node.labels.name == db
            labels:
                - "traefik.enable=true"
                - "traefik.port=3306"
        volumes:
            - mysql_data:/var/lib/mysql
            - /backup:/backup
        ports:
            - '3306:3306'
        networks: 
            - mysql
        environment:
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
            MYSQL_ROOT_HOST: "%"
        secrets:
            - mysql_root_password
            - mysql_password
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        deploy:
            labels:
                - traefik.frontend.rule=Host:phpmyadmin.bladehq.com
                - "traefik.enable=true"
                - "traefik.port=8082"
            placement:
                constraints: 
                    - node.labels.name != db
        networks:
            - mysql
        ports:
            - 8082:80
        environment:
            PMA_HOST: mysql
            PMA_PORT: 3306
        secrets:
            - mysql_root_password
            - mysql_password
    visualizer:
        image: dockersamples/visualizer:stable
        ports:
            - "8081:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        deploy:
            placement:
                constraints: 
                    - node.labels.name != db
                    - node.role == manager
            labels:
                - traefik.frontend.rule=Host:visualizer.bladehq.com
                - "traefik.port=8081"
                - "traefik.enable=true"
        networks:
            - traefik-net
volumes: 
    mysql_data:
# configs:
#     traefik_toml_v2:
#         file: ./traefik.toml
networks:
    traefik-net:
        external: true
    bladehq:
        name: bladehq
        driver: overlay
        attachable: true # not sure if we need this to be attachable or not
    mysql:
        name: mysql
        driver: overlay
        attachable: true
secrets:
    bladehq.com.crt: 
        external: true
    bladehq.com.key: 
        external: true
    bladehq_env: 
        external: true
    # TODO: add other stores
    blazeadminconfig: 
        external: true
    mysql_root_password:
        external: true
    mysql_password:
        external: true