// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "jlwarren1": Application Controllers
//
// Command:
// $ goagen
// --design=github.com/jaredwarren/jlwarren1.com/design
// --out=$(GOPATH)/src/github.com/jaredwarren/jlwarren1.com
// --version=v1.3.0

package app

import (
	"context"
	"github.com/goadesign/goa"
	"net/http"
)

// initService sets up the service encoders, decoders and mux.
func initService(service *goa.Service) {
	// Setup encoders and decoders
	service.Encoder.Register(goa.NewJSONEncoder, "application/json")
	service.Encoder.Register(goa.NewGobEncoder, "application/gob", "application/x-gob")
	service.Encoder.Register(goa.NewXMLEncoder, "application/xml")
	service.Decoder.Register(goa.NewJSONDecoder, "application/json")
	service.Decoder.Register(goa.NewGobDecoder, "application/gob", "application/x-gob")
	service.Decoder.Register(goa.NewXMLDecoder, "application/xml")

	// Setup default encoder and decoder
	service.Encoder.Register(goa.NewJSONEncoder, "*/*")
	service.Decoder.Register(goa.NewJSONDecoder, "*/*")
}

// HomeController is the controller interface for the Home actions.
type HomeController interface {
	goa.Muxer
	goa.FileServer
	Dashboard(*DashboardHomeContext) error
	Profile(*ProfileHomeContext) error
	Resume(*ResumeHomeContext) error
	UpdateResume(*UpdateResumeHomeContext) error
}

// MountHomeController "mounts" a Home resource controller on the given service.
func MountHomeController(service *goa.Service, ctrl HomeController) {
	initService(service)
	var h goa.Handler

	h = func(ctx context.Context, rw http.ResponseWriter, req *http.Request) error {
		// Check if there was an error loading the request
		if err := goa.ContextError(ctx); err != nil {
			return err
		}
		// Build the context
		rctx, err := NewDashboardHomeContext(ctx, req, service)
		if err != nil {
			return err
		}
		return ctrl.Dashboard(rctx)
	}
	service.Mux.Handle("GET", "/", ctrl.MuxHandler("dashboard", h, nil))
	service.LogInfo("mount", "ctrl", "Home", "action", "Dashboard", "route", "GET /")

	h = func(ctx context.Context, rw http.ResponseWriter, req *http.Request) error {
		// Check if there was an error loading the request
		if err := goa.ContextError(ctx); err != nil {
			return err
		}
		// Build the context
		rctx, err := NewProfileHomeContext(ctx, req, service)
		if err != nil {
			return err
		}
		return ctrl.Profile(rctx)
	}
	service.Mux.Handle("GET", "/profile", ctrl.MuxHandler("profile", h, nil))
	service.LogInfo("mount", "ctrl", "Home", "action", "Profile", "route", "GET /profile")

	h = func(ctx context.Context, rw http.ResponseWriter, req *http.Request) error {
		// Check if there was an error loading the request
		if err := goa.ContextError(ctx); err != nil {
			return err
		}
		// Build the context
		rctx, err := NewResumeHomeContext(ctx, req, service)
		if err != nil {
			return err
		}
		return ctrl.Resume(rctx)
	}
	service.Mux.Handle("GET", "/resume", ctrl.MuxHandler("resume", h, nil))
	service.LogInfo("mount", "ctrl", "Home", "action", "Resume", "route", "GET /resume")

	h = func(ctx context.Context, rw http.ResponseWriter, req *http.Request) error {
		// Check if there was an error loading the request
		if err := goa.ContextError(ctx); err != nil {
			return err
		}
		// Build the context
		rctx, err := NewUpdateResumeHomeContext(ctx, req, service)
		if err != nil {
			return err
		}
		return ctrl.UpdateResume(rctx)
	}
	service.Mux.Handle("GET", "/resume/update", ctrl.MuxHandler("updateResume", h, nil))
	service.LogInfo("mount", "ctrl", "Home", "action", "UpdateResume", "route", "GET /resume/update")

	h = ctrl.FileHandler("/static/*filename", "static/")
	service.Mux.Handle("GET", "/static/*filename", ctrl.MuxHandler("serve", h, nil))
	service.LogInfo("mount", "ctrl", "Home", "files", "static/", "route", "GET /static/*filename")

	h = ctrl.FileHandler("/resume/JaredWarren-Resume.pdf", "static/JaredWarren-Resume.pdf")
	service.Mux.Handle("GET", "/resume/JaredWarren-Resume.pdf", ctrl.MuxHandler("serve", h, nil))
	service.LogInfo("mount", "ctrl", "Home", "files", "static/JaredWarren-Resume.pdf", "route", "GET /resume/JaredWarren-Resume.pdf")

	h = ctrl.FileHandler("/images/favicon.ico", "static/images/favicon.ico")
	service.Mux.Handle("GET", "/images/favicon.ico", ctrl.MuxHandler("serve", h, nil))
	service.LogInfo("mount", "ctrl", "Home", "files", "static/images/favicon.ico", "route", "GET /images/favicon.ico")

	h = ctrl.FileHandler("/.well-known/keybase.txt", "static/keybase.txt")
	service.Mux.Handle("GET", "/.well-known/keybase.txt", ctrl.MuxHandler("serve", h, nil))
	service.LogInfo("mount", "ctrl", "Home", "files", "static/keybase.txt", "route", "GET /.well-known/keybase.txt")

	h = ctrl.FileHandler("/static/", "static/index.html")
	service.Mux.Handle("GET", "/static/", ctrl.MuxHandler("serve", h, nil))
	service.LogInfo("mount", "ctrl", "Home", "files", "static/index.html", "route", "GET /static/")
}
